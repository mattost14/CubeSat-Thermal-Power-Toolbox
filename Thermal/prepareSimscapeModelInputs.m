function thermalModel = prepareSimscapeModelInputs(param)
    % ######## PREPARE SIMSCAPE simpleThermalModel MODEL ########
    thermalModel.mdl = "simpleThermalModel";

    % Use a SimulationInput object to configure the model for our simulation.
    thermalModel.sim.in = Simulink.SimulationInput(thermalModel.mdl);

    % Solver setttings
    thermalModel.sim.in = thermalModel.sim.in.setModelParameter(...
        SolverType="Variable-step",...
        SolverName="VariableStepAuto",...
        RelTol="1e-6",...
        AbsTol="1e-7",...
        StopTime=string(param.orb.durationHours*3600));
    
    
    % Define thermal resistance inputs
    blk_RXplus = thermalModel.mdl + "/RX+";
    blk_RXminus = thermalModel.mdl + "/RX-";
    blk_RYplus = thermalModel.mdl + "/RY+";
    blk_RYminus = thermalModel.mdl + "/RY-";
    blk_RZplus = thermalModel.mdl + "/RZ+";
    blk_RZminus = thermalModel.mdl + "/RZ-";

    thermalModel.sim.in = thermalModel.sim.in.setBlockParameter(...
    blk_RXplus, "resistance", string(param.resistance(1)),...
    blk_RXminus, "resistance", string(param.resistance(2)),...
    blk_RYplus, "resistance", string(param.resistance(3)),...
    blk_RYminus, "resistance", string(param.resistance(4)),...
    blk_RZplus, "resistance", string(param.resistance(5)),...
    blk_RZminus, "resistance", string(param.resistance(6)));

    % Define inputs for the Internal Node 1
    blk_thermalMass = thermalModel.mdl + "/Internal Node 1";
    blk_internalNodePwr = thermalModel.mdl + "/Internal Node Pwr";

    thermalModel.sim.in = thermalModel.sim.in.setBlockParameter(...
    blk_thermalMass, "mass", string(param.internalNodeMass(1)),...
    blk_thermalMass, "sp_heat", string(param.internalNodeCp(1)),...
    blk_internalNodePwr, "VariableName", 'param.thermal.internalPwr');


    % Define inputs for Face X+ block
    faceId = 1;
    blk_radiativeHeatTransfer = thermalModel.mdl + "/Face X+/Radiative Heat Transfer";
    blk_thermalMass = thermalModel.mdl + "/Face X+/Thermal Mass";
    blk_solarFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment X+/Solar Flux";
    blk_IRFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment X+/IR Flux";
    blk_AlbedoFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment X+/Albedo Flux";

    thermalModel.sim.in = thermalModel.sim.in.setBlockParameter(...
    blk_radiativeHeatTransfer, "area", string(param.facesArea(faceId)),...
    blk_radiativeHeatTransfer, "rad_tr_coeff", string(param.krad(faceId)),...
    blk_thermalMass, "mass", string(param.facesMass(faceId)),...
    blk_thermalMass, "sp_heat", string(param.facesCp(faceId)),...
    blk_solarFlux, "VariableName", 'param.thermal.faceSolar.Xplus',...
    blk_IRFlux, "VariableName", 'param.thermal.faceIR.Xplus',...
    blk_AlbedoFlux, "VariableName",'param.thermal.faceAlbedo.Xplus');

    % Define inputs for Face X- block
    faceId = 2;
    blk_radiativeHeatTransfer = thermalModel.mdl + "/Face X-/Radiative Heat Transfer";
    blk_thermalMass = thermalModel.mdl + "/Face X-/Thermal Mass";
    blk_solarFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment X-/Solar Flux";
    blk_IRFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment X-/IR Flux";
    blk_AlbedoFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment X-/Albedo Flux";

    thermalModel.sim.in = thermalModel.sim.in.setBlockParameter(...
    blk_radiativeHeatTransfer, "area", string(param.facesArea(faceId)),...
    blk_radiativeHeatTransfer, "rad_tr_coeff", string(param.krad(faceId)),...
    blk_thermalMass, "mass", string(param.facesMass(faceId)),...
    blk_thermalMass, "sp_heat", string(param.facesCp(faceId)),...
    blk_solarFlux, "VariableName", 'param.thermal.faceSolar.Xminus',...
    blk_IRFlux, "VariableName", 'param.thermal.faceIR.Xminus',...
    blk_AlbedoFlux, "VariableName",'param.thermal.faceAlbedo.Xminus');

    % Define inputs for Face Y+ block
    faceId = 3;
    blk_radiativeHeatTransfer = thermalModel.mdl + "/Face Y+/Radiative Heat Transfer";
    blk_thermalMass = thermalModel.mdl + "/Face Y+/Thermal Mass";
    blk_solarFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Y+/Solar Flux";
    blk_IRFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Y+/IR Flux";
    blk_AlbedoFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Y+/Albedo Flux";

    thermalModel.sim.in = thermalModel.sim.in.setBlockParameter(...
    blk_radiativeHeatTransfer, "area", string(param.facesArea(faceId)),...
    blk_radiativeHeatTransfer, "rad_tr_coeff", string(param.krad(faceId)),...
    blk_thermalMass, "mass", string(param.facesMass(faceId)),...
    blk_thermalMass, "sp_heat", string(param.facesCp(faceId)),...
    blk_solarFlux, "VariableName", 'param.thermal.faceSolar.Yplus',...
    blk_IRFlux, "VariableName", 'param.thermal.faceIR.Yplus',...
    blk_AlbedoFlux, "VariableName",'param.thermal.faceAlbedo.Yplus');

    % Define inputs for Face Y- block
    faceId = 4;
    blk_radiativeHeatTransfer = thermalModel.mdl + "/Face Y-/Radiative Heat Transfer";
    blk_thermalMass = thermalModel.mdl + "/Face Y-/Thermal Mass";
    blk_solarFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Y-/Solar Flux";
    blk_IRFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Y-/IR Flux";
    blk_AlbedoFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Y-/Albedo Flux";

    thermalModel.sim.in = thermalModel.sim.in.setBlockParameter(...
    blk_radiativeHeatTransfer, "area", string(param.facesArea(faceId)),...
    blk_radiativeHeatTransfer, "rad_tr_coeff", string(param.krad(faceId)),...
    blk_thermalMass, "mass", string(param.facesMass(faceId)),...
    blk_thermalMass, "sp_heat", string(param.facesCp(faceId)),...
    blk_solarFlux, "VariableName", 'param.thermal.faceSolar.Yminus',...
    blk_IRFlux, "VariableName", 'param.thermal.faceIR.Yminus',...
    blk_AlbedoFlux, "VariableName",'param.thermal.faceAlbedo.Yminus');

    % Define inputs for Face Z+ block
    faceId = 5;
    blk_radiativeHeatTransfer = thermalModel.mdl + "/Face Z+/Radiative Heat Transfer";
    blk_thermalMass = thermalModel.mdl + "/Face Z+/Thermal Mass";
    blk_solarFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Z+/Solar Flux";
    blk_IRFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Z+/IR Flux";
    blk_AlbedoFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Z+/Albedo Flux";

    thermalModel.sim.in = thermalModel.sim.in.setBlockParameter(...
    blk_radiativeHeatTransfer, "area", string(param.facesArea(faceId)),...
    blk_radiativeHeatTransfer, "rad_tr_coeff", string(param.krad(faceId)),...
    blk_thermalMass, "mass", string(param.facesMass(faceId)),...
    blk_thermalMass, "sp_heat", string(param.facesCp(faceId)),...
    blk_solarFlux, "VariableName", 'param.thermal.faceSolar.Zplus',...
    blk_IRFlux, "VariableName", 'param.thermal.faceIR.Zplus',...
    blk_AlbedoFlux, "VariableName",'param.thermal.faceAlbedo.Zplus');

    % Define inputs for Face Z- block
    faceId = 6;
    blk_radiativeHeatTransfer = thermalModel.mdl + "/Face Z-/Radiative Heat Transfer";
    blk_thermalMass = thermalModel.mdl + "/Face Z-/Thermal Mass";
    blk_solarFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Z-/Solar Flux";
    blk_IRFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Z-/IR Flux";
    blk_AlbedoFlux =   thermalModel.mdl + "/Thermal Loads from Enviroment Z-/Albedo Flux";

    thermalModel.sim.in = thermalModel.sim.in.setBlockParameter(...
    blk_radiativeHeatTransfer, "area", string(param.facesArea(faceId)),...
    blk_radiativeHeatTransfer, "rad_tr_coeff", string(param.krad(faceId)),...
    blk_thermalMass, "mass", string(param.facesMass(faceId)),...
    blk_thermalMass, "sp_heat", string(param.facesCp(faceId)),...
    blk_solarFlux, "VariableName", 'param.thermal.faceSolar.Zminus',...
    blk_IRFlux, "VariableName", 'param.thermal.faceIR.Zminus',...
    blk_AlbedoFlux, "VariableName",'param.thermal.faceAlbedo.Zminus');
end
